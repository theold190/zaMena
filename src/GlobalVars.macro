%%GetTabSize=
  $If(%tabSize<0)
    editor.pos(1,2,1);
    %tmpBuff=Editor.Value;
    Tab print(%tmpBuff); Enter Up
    %tabSize=len(Editor.Value)-len(%tmpBuff);
    CtrlY
  $End

%%GetInitialPosition=
  %positionLine=editor.pos(0,1);
  %positionColumn=editor.pos(0,2);

  %startLine=editor.sel(0,0);
  %startColumn=editor.sel(0,1);
  %endLine=editor.sel(0,2);
  %endColumn=editor.sel(0,3);

%%ShiftCodeBlock=
  %iter=%startShiftLine;
  $While(%iter<=%endShiftLine)
    editor.pos(1,1,%iter);
    editor.pos(1,2,1);
    %buff=Editor.Value;
    %buffLen=len(%buff);

    $If(%buffLen!=0)
      %trimmedBuff=trim(%buff,1);
      %indent=%buffLen-len(%trimmedBuff);
      $If(%indent+%shiftSize > 0)
        $Rep(%indent+%shiftSize)
          print(" ");
        $End
        %shifted=1;
      $End
      print(trim(%buff,1)) Enter CtrlY
    $End
    %iter=%iter+1;
  $End

%%RestoreShiftSelection=
  $If(%shifted==0)
    %shiftSize=0;
  $End

  $If(%endColumn==0)
    editor.pos(1,2,%startColumn);
    editor.pos(1,1,%startLine);
    editor.sel(2,0);

    editor.pos(1,2,%startColumn);
    editor.pos(1,1,%endLine+1);
    editor.sel(2,1);

    editor.pos(1,2,%startColumn);
    editor.pos(1,1,%positionLine);
  $Else
    editor.pos(1,2,%startColumn+%shiftSize);
    editor.pos(1,1,%startLine);
    editor.sel(2,0);

    editor.pos(1,2,%endColumn+1+%shiftSize);
    editor.pos(1,1,%endLine);
    editor.sel(2,1);

    editor.pos(1,2,%positionColumn+%shiftSize);
    editor.pos(1,1,%positionLine);
  $End

%%FormatCodeBlock=
  editor.pos(1,1,%startFormatLine);
  %indentStartFlag=index(Editor.Value,"{");
  editor.pos(1,1,%endFormatLine);
  %indentStopFlag=index(Editor.Value,"}");

  %comment="Flags are indicating that we can somehow handle this block";
  $If(%indentStartFlag != -1 && %indentStopFlag != -1)
    editor.pos(1,1,%startFormatLine);
    %indentColumn=len(Editor.Value)-len(trim(Editor.Value,1));
    %iter=%startFormatLine+1;
    $While(%iter<=%endFormatLine)
      editor.pos(1,1,%iter);
      editor.pos(1,2,1);
      %buff=Editor.Value;
      %currIndent=len(%buff)-len(trim(%buff,1));

      %comment="We have different indent for block lines and a closing bracket";
      $If(%iter != %endFormatLine)
        %reqIndent=%indentColumn+%tabSize;
      $Else
        %reqIndent=%indentColumn;
      $End

      %comment="Now we set the requested indent and add trimmed line";
      $If(%currIndent != %reqIndent)
        $Rep(%reqIndent)
          print(" ");
        $End
        print(trim(%buff,1)); Enter CtrlY
      $End
      %iter=%iter+1;
    $End
  $End

%%SelectFile=
  $If(APanel.FilePanel && fexist(%selectFile_fullPath))
    %selectFile_path=fsplit(%selectFile_fullPath,0x00000001|0x00000002);
    %selectFile_name=fsplit(%selectFile_fullPath,0x00000004|0x00000008);
    panel.setpath(0,%selectFile_path,%selectFile_name);
  $End

%%BackupFile=
  %df_fileFullPath=%bakupFile_fullPath;
  $If(APanel.FilePanel && fexist(%df_fileFullPath))
    %bf_previousFile=APanel.Path+"\\"+APanel.Current;

    %selectFile_fullPath=%bf_fileFullPath;
    Eval(%%SelectFile)

    %bf_fileName=fsplit(%bf_fileFullPath,0x00000004|0x00000008);
    %bf_counter=1;
    %bf_fileBackupName=%bf_fileName+".bak"+%bf_counter;
    $While(panel.fexist(0,%bf_fileBackupName))
      %bf_counter=%bf_counter+1;
      %bf_fileBackupName=%bf_fileName+".bak"+%bf_counter;
    $End
    ShiftF5 CtrlY print(%bf_fileBackupName) Enter

    %selectFile_fullPath=%bf_previousFile;
    Eval(%%SelectFile)
  $End
