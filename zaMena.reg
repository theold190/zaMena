REGEDIT4

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Vars]
"%%GetTabSize"="$If(%tabSize<0)     editor.pos(1,2,1);     %tmpBuff=Editor.Value;     Tab print(%tmpBuff); Enter Up     %tabSize=len(Editor.Value)-len(%tmpBuff);     CtrlY $End"

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Vars]
"%%GetInitialPosition"="%positionLine=editor.pos(0,1);   %positionColumn=editor.pos(0,2);    %startLine=editor.sel(0,0);   %startColumn=editor.sel(0,1);   %endLine=editor.sel(0,2);   %endColumn=editor.sel(0,3);"

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Vars]
"%%FormatCodeBlock"="editor.pos(1,1,%startFormatLine);   %indentStartFlag=index(Editor.Value,\"{\");   editor.pos(1,1,%endFormatLine);   %indentStopFlag=index(Editor.Value,\"}\");    %comment=\"Flags are indicating that we can somehow handle this block\";   $If(%indentStartFlag != -1 && %indentStopFlag != -1)     editor.pos(1,1,%startFormatLine);     %indentColumn=len(Editor.Value)-len(trim(Editor.Value,1));     %iter=%startFormatLine+1;     $While(%iter<=%endFormatLine)       editor.pos(1,1,%iter);       editor.pos(1,2,1);       %buff=Editor.Value;       %currIndent=len(%buff)-len(trim(%buff,1));        %comment=\"We have different indent for block lines and a closing bracket\";       $If(%iter != %endFormatLine)         %reqIndent=%indentColumn+%tabSize;       $Else         %reqIndent=%indentColumn;       $End        %comment=\"Now we set the requested indent and add trimmed line\";       $If(%currIndent != %reqIndent)         $Rep(%reqIndent)           print(\" \");         $End         print(trim(%buff,1)); Enter CtrlY       $End       %iter=%iter+1;     $End   $End"

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Editor\*]
"Sequence"="$If(!Selected)   $AKey $Else   editor.undo(0);   Eval(%%GetInitialPosition)    $If(%endColumn==0 && %startLine!=%endLine)     %endLine=%endLine-1;   $End    editor.pos(1,1,%endLine);   %endComment=index(substr(Editor.Value,0,2),\"*/\");   editor.pos(1,1,%startLine);   %startComment=index(substr(Editor.Value,0,2),\"/*\");    editor.sel(4);   editor.pos(1,2,1);    $If(%startComment!=-1 && %endComment!=-1)     editor.pos(1,1,%startLine);     Del Del Del     editor.pos(1,1,%endLine-1);     Del Del Del     editor.pos(1,1,%startLine);     $If(%positionLine>%startLine)       %shiftedLine=-2;     $End   $Else     editor.pos(1,1,%startLine);     print(\"/*\\n\");     editor.pos(1,1,%endLine+2);     print(\"*/\\n\");     $If(%positionLine>%startLine)       %shiftedLine=2;     $End   $End    editor.pos(1,2,%positionColumn);   editor.pos(1,1,%positionLine+%shiftedLine);    editor.undo(1); $End"
"DisableOutput"=dword:00000001

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Editor\/]
"Sequence"="$If(!Selected)   $AKey $Else   editor.undo(0);   Eval(%%GetInitialPosition)    $If(%endColumn==0 && %startLine!=%endLine)     %endLine=%endLine-1;   $End    %iter=%startLine;   editor.sel(4);    editor.pos(1,1,%iter);   %fd=index(substr(Editor.Value,0,2),\"//\");    $While (%iter<=%endLine)     editor.pos(1,2,1);     editor.pos(1,1,%iter);     $If(%fd==-1)       print(\"//\");     $Else       $If(index(substr(Editor.Value,0,2),\"//\")!=-1) Del Del $End     $End     %iter=%iter+1;   $End    editor.pos(1,2,%positionColumn);   editor.pos(1,1,%positionLine);    editor.undo(1); $End"
"DisableOutput"=dword:00000001

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Editor\ShiftTab]
"Sequence"="$If(!Selected)   $AKey $Else   editor.undo(0);   Eval(%%GetInitialPosition)    editor.sel(4);    %tabSize=-1;   Eval(%%GetTabSize)    $If(%endColumn==0 && %startLine!=%endLine)     %endLine=%endLine-1;   $End    %iter=%startLine;   $While(%iter<=%endLine)     editor.pos(1,1,%iter);     editor.pos(1,2,1);     %buff=Editor.Value;     %buffLen=len(%buff);     $If(%buffLen!=0)       %trimedLen=len(trim(%buff,1));       $if(%trimedLen!=%buffLen)         $if(%buffLen>=%trimedLen+%tabSize)           %buff=substr(%buff,%tabSize);         $Else           %buff=substr(%buff,%buffLen-%trimedLen);         $End         CtrlY print(%buff) Enter         %shifted=1;       $End     $End     %iter=%iter+1;   $End    $If(%shifted==0)     %shiftSize=0;   $Else     %shiftSize=-%tabSize;   $End    $If(%endColumn==0)     editor.pos(1,2,%startColumn);     editor.pos(1,1,%startLine);     editor.sel(2,0);      editor.pos(1,2,%startColumn);     editor.pos(1,1,%endLine+1);     editor.sel(2,1);      editor.pos(1,2,%startColumn);     editor.pos(1,1,%positionLine);   $Else     editor.pos(1,2,%startColumn+%shiftSize);     editor.pos(1,1,%startLine);     editor.sel(2,0);      editor.pos(1,2,%endColumn+1+%shiftSize);     editor.pos(1,1,%endLine);     editor.sel(2,1);      editor.pos(1,2,%positionColumn+%shiftSize);     editor.pos(1,1,%positionLine);   $End    editor.undo(1); $End"
"DisableOutput"=dword:00000001

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Editor\Tab]
"Sequence"="$If(!Selected)   $AKey $Else   editor.undo(0);   Eval(%%GetInitialPosition)    editor.sel(4);    %tabSize=-1;   Eval(%%GetTabSize)    $If(%endColumn==0 && %startLine!=%endLine)     %endLine=%endLine-1;   $End    %iter=%startLine;   $While(%iter<=%endLine)     editor.pos(1,1,%iter);     editor.pos(1,2,1);     %buff=Editor.Value;     Tab print(%buff); Enter CtrlY     %iter=%iter+1;   $End    $If(%tabSize<0)     %shiftSize=0;   $Else     %shiftSize=%tabSize;   $End    $If(%endColumn==0)     editor.pos(1,2,%startColumn);     editor.pos(1,1,%startLine);     editor.sel(2,0);      editor.pos(1,2,%startColumn);     editor.pos(1,1,%endLine+1);     editor.sel(2,1);      editor.pos(1,2,%startColumn);     editor.pos(1,1,%positionLine);   $Else     editor.pos(1,2,%startColumn+%shiftSize);     editor.pos(1,1,%startLine);     editor.sel(2,0);      editor.pos(1,2,%endColumn+1+%shiftSize);     editor.pos(1,1,%endLine);     editor.sel(2,1);      editor.pos(1,2,%positionColumn+%shiftSize);     editor.pos(1,1,%positionLine);   $End    editor.undo(1); $End"
"DisableOutput"=dword:00000001

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Editor\Space]
"Sequence"="$If(!Selected)   $AKey $Else   editor.undo(0);   Eval(%%GetInitialPosition)    $If(%endColumn==0 && %startLine!=%endLine)     %endLine=%endLine-1;   $End    editor.sel(4);    %iter=%startLine;   $While(%iter<=%endLine)     editor.pos(1,1,%iter);     editor.pos(1,2,1);     %buff=Editor.Value;     %buffLen=len(%buff);     $If(%buffLen!=0)       $if(len(trim(%buff)) != %buffLen)         print(trim(%buff,2)); Enter CtrlY       $End     $End     %iter=%iter+1;   $End    editor.pos(1,1,%positionLine);   $If(%positionColumn>len(Editor.Value))     End   $Else     editor.pos(1,2,%positionColumn);   $End    editor.undo(1); $End"
"DisableOutput"=dword:00000001

[HKEY_CURRENT_USER\Software\far2\KeyMacros\Editor\i]
"Sequence"="$If(!Selected)   $AKey $Else   editor.undo(0);   Eval(%%GetInitialPosition)    editor.sel(4);    %tabSize=-1;   Eval(%%GetTabSize)    $If(%endColumn==0 && %startLine!=%endLine)     %endLine=%endLine-1;   $End    %iterStart=%startLine;   %iterEnd=%endLine;    $While(%iterStart < %iterEnd)      editor.pos(1,1,%iterStart);     $While(index(Editor.Value, \"{\") == -1 && %iterStart <= %iterEnd)       %iterStart=%iterStart+1;       editor.pos(1,1,%iterStart);     $End      %comment=\"%deep is used to find proper matching bracket\";     %deep=0;     %iter=%iterStart+1;     editor.pos(1,1,%iter);     $While((%deep != 0 || index(Editor.Value, \"}\") == -1) && %iter <= %iterEnd)       $If(index(Editor.Value, \"{\") != -1)         %deep=%deep+1;       $Else         $If(index(Editor.Value, \"}\") != -1)           %deep=%deep-1;         $End       $End       %iter=%iter+1;       editor.pos(1,1,%iter);     $End      %comment=\"As we found start and end of a block - use %%FormatCodeBlock mini-macro\";     $If(%iterStart < %iter)       %startFormatLine=%iterStart;       %endFormatLine=%iter;       Eval(%%FormatCodeBlock)     $End      %iterStart=%iterStart+1;   $End    editor.pos(1,2,%positionColumn);   editor.pos(1,1,%positionLine);    editor.undo(1); $End"
"DisableOutput"=dword:00000001
